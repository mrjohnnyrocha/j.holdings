name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push Docker images
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: j.holdings/juniverse:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: SSH into server and deploy
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/www/j.holdings
            docker-compose down
            docker-compose pull
            docker-compose up -d

      - name: Rollback on failure
        if: failure()
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/www/j.holdings
            docker-compose down
            docker-compose -f docker-compose.rollback.yml up -d

  monitor:
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Setup Prometheus and Grafana
        run: |
          docker run -d -p 9090:9090 prom/prometheus
          docker run -d -p 3000:3000 grafana/grafana

      - name: Configure Alerts
        run: |
          curl -X POST -H "Content-Type: application/json" \
          -d '{
                "alerts": [
                  {
                    "name": "High CPU Usage",
                    "condition": "avg(last_5m) > 80",
                    "action": "send_email"
                  }
                ]
              }' http://localhost:9090/api/v1/alerts
